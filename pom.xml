<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.transsnet</groupId>
    <artifactId>auto-more</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <!-- JDK 版本和编码方式 -->
        <encoding>UTF-8</encoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- 各依赖版本信息 -->
        <lombok-version>1.18.12</lombok-version>
        <appium-version>7.3.0</appium-version>
        <selenuim-version>3.4.0</selenuim-version>
        <testng-version>6.8</testng-version>
        <dom4j-version>1.6.1</dom4j-version>
        <xml-apis-version>1.0.b2</xml-apis-version>
        <log4j-version>2.13.3</log4j-version>
        <slf4j-version>1.7.30</slf4j-version>
        <allure2.version>2.13.6</allure2.version>
        <aspectj.version>1.8.10</aspectj.version>
        <compiler-plugin-version>3.8.1</compiler-plugin-version>
        <assembly-plugin-version>3.3.0</assembly-plugin-version>
        <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>

        <suiteXmlFile>testng.xml</suiteXmlFile>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.appium</groupId>
            <artifactId>java-client</artifactId>
            <version>${appium-version}</version>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenuim-version}</version>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng-version}</version>
<!--            <scope>test</scope>-->
        </dependency>

        <!-- https://mvnrepository.com/artifact/dom4j/dom4j -->
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${dom4j-version}</version>
        </dependency>

        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>${xml-apis-version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok-version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j-version}</version>
        </dependency>

        <!-- allure 2 -->
<!--        <dependency>-->
<!--            <groupId>io.qameta.allure</groupId>-->
<!--            <artifactId>allure-testng</artifactId>-->
<!--            <version>${allure2.version}</version>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->
        <!-- allure 2 配置依赖 -->
    </dependencies>

    <build>
        <finalName>${project.groupId}-${project.artifactId}-${project.version}</finalName>
        <plugins>
            <!-- 编译插件 compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin-version}</version>
                <configuration>
                    <!-- 使用jdk 1.8的版本来编译 -->
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- 打包插件 surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${assembly-plugin-version}</version>
                <configuration>
                    <descriptors>src/main/resources/assembly.xml</descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>com.transsnet.more.runTest.RunTest</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- 测试插件 surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <encoding>${encoding}</encoding>
                    <!-- allure 2 配置 -->
                    <argLine>
                        - javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
                    </argLine>
                    <suiteXmlFiles>
                        <!-- 通过美元符的形式可以将 jenkins 中参数传递过来，指定要运行的 xml 名 -->
                        <!-- <suiteXmlFile>${xml.file}</suiteXmlFile> -->
                        <suiteXmlFile>${suiteXmlFile}</suiteXmlFile>
                    </suiteXmlFiles>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjweaver</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

</project>